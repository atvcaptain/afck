#!/bin/bash
#
# A utility to build an ext4 image from an unpacked collection.
# If the image was not parsed (no unpacked directory exists),
# just copies the original image to the final one.
#

DIR=
OUT=
ORIG=
SECON=
TIME=

while test -n "$1" ; do
	case "$1" in
		-d) DIR="$2"; shift ;;
		-o) OUT="$2"; shift ;;
		-c) SECON="$2"; shift ;;
		-O) ORIG="$2"; shift ;;
		-s) SIZE="$2"; shift ;;
		-t) TIME="$2"; shift ;;
		-*) echo "Unknown option $1"; exit 1 ;;
		 *) echo "Not clear file assignment $1"; exit 1 ;;
	esac

	shift
done

test -z "$TIME" && TIME=$(date '+%s')

if test -z "$SECON" -o -z "$DIR" -o -z "$OUT" ; then
	echo "Builds ext4 unpacked partition back to image file"
	echo "Run: $0 [options]"
	echo ""
	echo "-d <directory> directory with unpacked files"
	echo "-o <image> Set output image name"
	echo "-O <beginning image> Determine the size of the output image by the size of the original"
	echo "-s <size> Specify directly the output image size"
	echo "-c <context> Take security contexts from specified file"
	echo "-t <time> Set the specified time on files"
	echo ""
	echo "File with contexts has a standard file_contexts format."
	echo ""
	echo "The time is set in Unix time format. If no time is set, the current time is taken."
	echo ""
	echo "If the size is set in the original image, it is first checked for existence"
	echo "the same file with the extension .raw; if it is not, the size of the specified file is taken,"
	echo ""
	echo "If the -d option is not set, a simple -O to -o copy is made."
	exit 1
fi

function cmd() {
	echo $*
	$*
}

# The path to other utilities
TOOLS_DIR=$(dirname $(readlink -f $0))
# Section name
PART=$(basename "$OUT" | cut -f 1 -d '.')
# File with the owner and access rights
STATS=$(dirname "$DIR")/${PART}_statfile.txt

# Let's check if the original image was unpacked
if test -n "$DIR" -a -d "$DIR" ; then

	set -e
	# Let's calculate the size of the original file system
	if test -z "$SIZE" ; then
		if test -e "${ORIG}.raw" ; then
			SIZE=$(stat -c "%s" "${ORIG}.raw")
		elif test -e "$ORIG" ; then
			SIZE=$(stat -c "%s" "$ORIG")
		else
			echo "$0: the $ORIG file does not exist"
			exit 1
		fi
	fi

	rm -f "$OUT"
	cmd $TOOLS_DIR/make_ext4fs -s -l "$SIZE" -T "$TIME" -L "$PART" -a "$PART" \
		-C "$STATS" -S "$SECON" "$OUT" "$DIR"
	exit 0
fi

if test -e "$ORIG" ; then
	set -e
	# Copy the original unpacked image into the final one
	# To avoid wasting disk space, just create a hard link
	ln "$ORIG" "$OUT"
	exit 0
fi

echo "$0: no unpacked or packed image to create $OUT"
exit 2
